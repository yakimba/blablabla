#!groovy
//check js01 properties
properties([disableConcurrentBuilds()])

pipeline {
          agent {
                label 'master'
                }
          triggers { pollSCM('* * * * *')}          
          options {
                  
                   buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
                   timestamps()
                   }
          stages {
                  stage("docker login") {
                                        steps {
                                               echo " =========docker login========= "
                                               withCredentials([usernamePassword(credentialsID: 'dockerhub_germansnow', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]){
                                                              sh """
                                                              docker login -u $USERNAME -p $PASSWORD
                                                              """
                                               }
                                        }                                    
                  }
                  stage("Create docker image") {
                                               steps {
                                                      echo "==============start building image=============="
                                                      dir ('docker') {
                                                                     sh 'docker build -t germansnow/docker:latest .'
                                                      }
                                               }                                           
                  }
                   stage("Docker push"){
                              steps {
                                        echo "=========start pushing image========="
                                        sh '''
                                        docker push germansnow/docker:latest
                                        '''
                              }
                    }
                    
          }
}

                                        
       
